(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1502],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return n?r.createElement(g,i(i({ref:t},l),{},{components:n})):r.createElement(g,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4655:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return l}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i={},u={unversionedId:"navigation",id:"navigation",isDocsHomePage:!1,title:"Navigation",description:"To navigate between page without a BuildContext you can use the meedu's router module.",source:"@site/docs/navigation.md",sourceDirName:".",slug:"/navigation",permalink:"/docs/4.x.x/navigation",editUrl:"https://github.com/darwin-morocho/flutter-meedu/edit/master/website/docs/navigation.md",version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Reactive programming",permalink:"/docs/4.x.x/reactive-programming"},next:{title:"Screen Utils",permalink:"/docs/4.x.x/screen-utils"}},s=[{value:"onGenerateRoute",id:"ongenerateroute",children:[]},{value:"Named routes with custom transitions",id:"named-routes-with-custom-transitions",children:[]},{value:"Testing",id:"testing",children:[]}],d={toc:s};function l(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To navigate between page without a BuildContext you can use the meedu's router module."),(0,o.kt)("p",null,"In your MaterialApp"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_meedu/router.dart' as router;\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      navigatorKey: router.navigatorKey, // add the navigator key\n      home: HomePage(),\n      routes: {YOUR_ROUTES},\n    );\n  }\n}\n")),(0,o.kt)("p",null,"Now you can navigate without BuildContext"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_meedu/router.dart' as router;\n.\n.\n.\nrouter.pushNamed('detail-page', arguments: \"your-arguments\");\n")),(0,o.kt)("p",null,"If you want get your arguments"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/material.dart';\nimport 'package:flutter_meedu/router.dart' as router;\n\nclass DetailPage extends StatelessWidget {\n  const DetailPage({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    // WARNING: when you use ModalRoute.of(context).settings.arguments\n    // inside a build method this could rebuild your widget when it is destroyed.\n    // router.arguments<String>(context) uses  ModalRoute.of(context).settings.arguments\n    // in that cases I recommend get your arguments before create your Page\n    // in that case you can use the PageWithArgumentsWidget class\n    final arguments = router.arguments<String>(context);\n    return YOUR_WIDGET;\n  }\n}\n")),(0,o.kt)("h2",{id:"ongenerateroute"},"onGenerateRoute"),(0,o.kt)("p",null,"If you want to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"onGenerateRoute")," parameter of your MaterialApp or CupertinoApp you must define the ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{7}","{7}":!0},"import 'package:flutter_meedu/router.dart' as router;\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      key: router.appKey,// add the route key\n      navigatorKey: router.navigatorKey, // add the navigator key\n      onGenerateRoute: (settings) {\n        final name = settings.name;\n        switch (name) {\n          case '/':\n            return MaterialPageRoute(\n              builder: (_) => HomePage(),\n            );\n\n          case '/counter':\n            return MaterialPageRoute(\n              builder: (_) => CounterPage(),\n            );\n          default:\n            return MaterialPageRoute(\n              builder: (_) => Scaffold(\n                appBar: AppBar(),\n                body: Center(\n                  child: Text(\"Page not found\"),\n                ),\n              ),\n            );\n        }\n      },\n    );\n  }\n}\n")),(0,o.kt)("h2",{id:"named-routes-with-custom-transitions"},"Named routes with custom transitions"),(0,o.kt)("p",null,"If you want to override the default transition when use named routes\nyou need to define the ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," parameter of your MaterialApp or CupertinoApp"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{5,13}","{5,13}":!0},"import 'package:flutter_meedu/router.dart' as router;\n\nvoid main() {\n  // overrride the default page transition for named and non named routes\n  router.setDefaultTransition(router.Transition.downToUp);\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      key: router.appKey,// add the route key\n      navigatorKey: router.navigatorKey, // add the navigator key\n      home: HomePage(),\n      routes: {YOUR_ROUTES},\n    );\n  }\n}\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Posible transitions"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"enum Transition {\n  fadeIn,\n  rightToLeft,\n  upToDown,\n  downToUp,\n  zoom,\n  none,\n  cupertino,\n  material,\n}\n")))),(0,o.kt)("h2",{id:"testing"},"Testing"),(0,o.kt)("p",null,"For widget testing you will need to dispose the NavigatorState created by ",(0,o.kt)("inlineCode",{parentName:"p"},"router.navigatorKey")," before or after each test"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_meedu/router.dart' as router;\n\n.\n.\n.\n\nsetUp((){\n  router.dispose();\n});\n\n// or\n\ntearDown((){\n  router.dispose();\n});\n")))}l.isMDXComponent=!0}}]);