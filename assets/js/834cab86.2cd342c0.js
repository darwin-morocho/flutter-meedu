(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1763],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),g=a,c=p["".concat(l,".").concat(g)]||p[g]||m[g]||o;return n?r.createElement(c,i(i({ref:t},d),{},{components:n})):r.createElement(c,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5675:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i={sidebar_position:5},s={unversionedId:"state-managment/working-with-arguments",id:"state-managment/working-with-arguments",isDocsHomePage:!1,title:"Working with arguments",description:"Some times you need to pass an initial values to your SimpleNotifier or StateNotifier in that cases you can sue the setArguments method of your provider.",source:"@site/docs/state-managment/working-with-arguments.md",sourceDirName:"state-managment",slug:"/state-managment/working-with-arguments",permalink:"/docs/5.x.x/state-managment/working-with-arguments",editUrl:"https://github.com/darwin-morocho/flutter-meedu/edit/master/website/docs/state-managment/working-with-arguments.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mySidebar",previous:{title:"StateNotifier",permalink:"/docs/5.x.x/state-managment/state-notifier"},next:{title:"Working with tags",permalink:"/docs/5.x.x/state-managment/working-with-tags"}},l=[],u={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Some times you need to pass an initial values to your ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleNotifier")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"StateNotifier")," in that cases you can sue the ",(0,o.kt)("inlineCode",{parentName:"p"},"setArguments")," method of your provider."),(0,o.kt)("p",null,"In the next example to create a new instance of ",(0,o.kt)("strong",{parentName:"p"},"LoginController")," we need a initial email value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class LoginController extends StateNotifier<LoginState> {\n  LoginController(String initialEmail)\n      : super(\n          LoginState(email: initialEmail, password: ''),\n        );\n}\n")),(0,o.kt)("p",null,"Next you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"ref")," parameter of your callback generator to get the ",(0,o.kt)("inlineCode",{parentName:"p"},"arguments")," passed in the ",(0,o.kt)("inlineCode",{parentName:"p"},"initState")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{2,19}","{2,19}":!0},"final loginProvider = StateProvider<LoginController, LoginState>(\n  (ref) => LoginController(ref.arguments ?? ''),\n);\n\n\nclass LoginPage extends StatefulWidget {\n  const LoginPage({Key? key}) : super(key: key);\n\n  @override\n  _LoginPageState createState() => _LoginPageState();\n}\n\nclass _LoginPageState extends State<LoginPage> {\n  @override\n  void initState() {\n    super.initState();\n    // you must set your arguments\n    // before call loginProvider.read or before use watch(loginProvider)\n    loginProvider.setArguments(\"initial@email.com\");\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // YOUR CODE HERE\n  }\n}\n")),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"WARNING")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you are using ",(0,o.kt)("inlineCode",{parentName:"p"},"ModalRoute.of(context)")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," method or in the ",(0,o.kt)("inlineCode",{parentName:"p"},"routes")," parameter of one ",(0,o.kt)("inlineCode",{parentName:"p"},"MaterialApp"),"  to get ",(0,o.kt)("inlineCode",{parentName:"p"},"arguments")," that was passed by\n",(0,o.kt)("inlineCode",{parentName:"p"},"Navigator.push"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Navigator.pushName"),", etc and next you use  ",(0,o.kt)("inlineCode",{parentName:"p"},"Navigator.pushNamedAndRemoveUntil")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Navigator.pushNameAndRemoveUntil")," to navigate to a new Route removing multiples routes from the Stack the ",(0,o.kt)("inlineCode",{parentName:"p"},"ModalRoute.of(context)")," will rebuild the route before remove it and it could be a problem with a ",(0,o.kt)("inlineCode",{parentName:"p"},"provider")," because that could be recreated a disposed provider."),(0,o.kt)("p",{parentName:"div"},"In that cases you could use the ",(0,o.kt)("inlineCode",{parentName:"p"},"PageWithArguments")," widget to avoid the recreation of a disposed provider."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/material.dart';\nimport 'package:flutter_meedu/page.dart';\n\nclass ProductDetail extends StatelessWidget {\n  const ProductDetail({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return PageWithArguments(\n      onReady: (RouteSettings settings) {\n        final arguments = settings.arguments;\n        productProvider.setArguments(arguments);\n      },\n     builder: (context) => Scaffold(...) ,\n    );\n  }\n}\n")),(0,o.kt)("p",null,"Or you can create yourn own widget using ",(0,o.kt)("inlineCode",{parentName:"p"},"PageWithArgumentsWidget")," class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"\nimport 'package:flutter/material.dart';\nimport 'package:flutter_meedu/meedu.dart';\nimport 'package:flutter_meedu/page.dart';\n\nfinal loginProvider = SimpleProvider(\n  (ref) => LoginController(ref.arguments),\n);\n\nclass LoginPage extends PageWithArgumentsWidget {\n  const LoginPage({Key? key}) : super(key: key);\n\n  @override\n  void onInit(RouteSettings settings) {\n    /// you can use settings to get data passed as an argument\n    /// using Navigator.pushName(context,'route-name', arguments: data);\n    loginProvider.setArguments(settings.arguments);\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      .\n      .\n      .\n    );\n  }\n}\n")))}d.isMDXComponent=!0}}]);