(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2490],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),s=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,v=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return t?r.createElement(v,i(i({ref:n},c),{},{components:t})):r.createElement(v,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4874:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d},default:function(){return c}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i={sidebar_position:3},l={unversionedId:"state-management/simple-notifier",id:"state-management/simple-notifier",isDocsHomePage:!1,title:"SimpleNotifier",description:"Para manejar el estado de su vista similar a ChangeNotifier",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/state-management/simple-notifier.md",sourceDirName:"state-management",slug:"/state-management/simple-notifier",permalink:"/es/docs/state-management/simple-notifier",editUrl:"https://github.com/darwin-morocho/flutter-meedu/edit/master/website/i18n/es/docusaurus-plugin-content-docs/current",version:"current",lastUpdatedBy:"Darwin",lastUpdatedAt:1651503966,formattedLastUpdatedAt:"2/5/2022",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"mySidebar",previous:{title:"Configuraci\xf3n",permalink:"/es/docs/state-management/intro"},next:{title:"StateNotifier",permalink:"/es/docs/state-management/state-notifier"}},d=[{value:"<strong>SimpleProvider</strong>",id:"simpleprovider",children:[{value:"Escuchando los cambios en un SimpleNotifier",id:"escuchando-los-cambios-en-un-simplenotifier",children:[]},{value:"Actualizar Consumers mediante el filtro <strong><em>.select</em></strong>",id:"actualizar-consumers-mediante-el-filtro-select",children:[]}]},{value:"ConsumerWidget",id:"consumerwidget",children:[]}],s={toc:d};function c(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Para manejar el estado de su vista similar a ",(0,o.kt)("inlineCode",{parentName:"p"},"ChangeNotifier"),"\nutilice a clase ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleNotifier"),"."),(0,o.kt)("p",null,"Simplemente cree una clase  que extienda de ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleNotifier")," y llame al m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"notify")," para notificar que ha ocurrido\nun cambio y actualizar sus vistas."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_meedu/meedu.dart';//<-- IMPORT meedu\n\nclass CounterController extends SimpleNotifier{\n    int _counter = 0;\n    int get counter => _counter;\n\n    void increment(){\n        _counter++;\n        notify(); // notify to all listeners\n    }\n\n    // override the next method is OPTIONAL\n    @override\n    void dispose() {\n      // YOUR CODE HERE\n      super.dispose();// <-- you must call to the super method\n    }\n}\n")),(0,o.kt)("h2",{id:"simpleprovider"},(0,o.kt)("strong",{parentName:"h2"},"SimpleProvider")),(0,o.kt)("p",null,"Ahora debe crear un ",(0,o.kt)("inlineCode",{parentName:"p"},"provider")," como una variable global usando la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleProvider"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"final counterProvider = SimpleProvider(\n  (_) => CounterController(),\n);\n")),(0,o.kt)("p",null,"Ahora para escuchar los cambios y actualizar la vista use el widget ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_meedu/ui.dart';\nimport 'package:flutter_meedu/meedu.dart';\n\nfinal counterProvider = SimpleProvider(\n  (ref) => CounterController(),\n);\n\nclass CounterPage extends StatelessWidget {\n  const CounterPage({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Center(\n        // The Consumer widget listen the changes in your CounterController\n        // and rebuild the widget when is need it\n        child: Consumer(builder: (_, ref, __) {\n          final controller = ref.watch(counterProvider);\n          return Text(\"${controller.counter}\");\n        }),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {\n          // you can use the read method to access to your CounterController\n          counterProvider.read.increment();\n        },\n      ),\n    );\n  }\n}\n")),(0,o.kt)("p",null,"Por defecto la variable global ",(0,o.kt)("inlineCode",{parentName:"p"},"counterProvider")," no creara una instancia de ",(0,o.kt)("inlineCode",{parentName:"p"},"CounterController")," hasta que es necesario. En el caso del widget ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer")," este llama a la propiedad ",(0,o.kt)("inlineCode",{parentName:"p"},"read")," de nuestro ",(0,o.kt)("inlineCode",{parentName:"p"},"counterProvider")," y comprueba si anteriormente se creo una instancia de ",(0,o.kt)("inlineCode",{parentName:"p"},"CounterController")," o si no la crea en ese momento."),(0,o.kt)("p",null,"El  m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose")," de nuestro ",(0,o.kt)("inlineCode",{parentName:"p"},"CounterController")," sera llamado cuando la ",(0,o.kt)("inlineCode",{parentName:"p"},"ruta")," que creo nuestro ",(0,o.kt)("inlineCode",{parentName:"p"},"CounterController")," es eliminada del stack de rutas (Esta es la caracteristica de ",(0,o.kt)("strong",{parentName:"p"},"AUTO DISPOSE"),")."),(0,o.kt)("p",null,"Si desea desactivar la caracteristica de ",(0,o.kt)("strong",{parentName:"p"},"AUTO DISPOSE")," use el\nparametro ",(0,o.kt)("inlineCode",{parentName:"p"},"autoDispose")," de su provider."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{3}","{3}":!0},"final counterProvider = SimpleProvider(\n  (ref) => CounterController(),\n  autoDispose: false,// <-- ADD THIS TO DISABLE THE AUTO DISPOSE\n);\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"autoDispose: false")," puede usarse para crear estados globales."))),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"WARNING")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Cuando desactiva la caracteristica de ",(0,o.kt)("inlineCode",{parentName:"p"},"autoDispose")," en su ",(0,o.kt)("inlineCode",{parentName:"p"},"provider")," usted debe encargarse de liberar su provider cuando\neste ya no es necesario. Aqu\xed un ejemplo:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{18}","{18}":!0},'final counterProvider = SimpleProvider(\n (ref) => CounterController(),\n autoDispose: false,\n);\n\nclass CounterPage extends StatefulWidget {\n const CounterPage({Key? key}) : super(key: key);\n @override\n _CounterPageState createState() => _CounterPageState();\n}\n\nclass _CounterPageState extends State<CounterPage> {\n @override\n void dispose() {\n   // handle the dispose event manually\n   // check if the provider has a Controller created before\n   if (counterProvider.mounted) {\n     counterProvider.dispose();\n   }\n   super.dispose();\n }\n\n @override\n Widget build(BuildContext context) {\n   return Scaffold(\n     body: Center(\n       child: Consumer(builder: (_, ref, __) {\n         final controller = ref.watch(counterProvider);\n         return Text("${controller.counter}");\n       }),\n     ),\n     floatingActionButton: FloatingActionButton(\n       onPressed: () {\n         counterProvider.read.increment();\n       },\n     ),\n   );\n }\n}\n')))),(0,o.kt)("h3",{id:"escuchando-los-cambios-en-un-simplenotifier"},"Escuchando los cambios en un SimpleNotifier"),(0,o.kt)("p",null,"El widget ",(0,o.kt)("inlineCode",{parentName:"p"},"ProviderListener")," puede ser usado para escuchar los cambios en un ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleNotifier")," y un ",(0,o.kt)("inlineCode",{parentName:"p"},"StateNotifier")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{3-7}","{3-7}":!0},' ProviderListener<CounterController>(\n      provider: counterProvider,\n      onChange: (context, controller) {\n        // YOUR CODE HERE\n        // This method is called every time that one Instance\n        // of our CounterController calls to the notify() method\n      },\n      builder: (_, controller) => Scaffold(\n        body: Center(\n          // The Consumer widget listen the changes in your CounterController\n          // and rebuild the widget when is need it\n          child: Consumer(\n            builder: (_, ref, __) {\n              final controller = ref.watch(counterProvider);\n              return Text("${controller.counter}");\n            },\n          ),\n        ),\n        floatingActionButton: FloatingActionButton(\n          onPressed: () {\n            // you can use the read property to access to your CounterController\n            counterProvider.read.increment();\n          },\n        ),\n      ),\n    )\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"El widget ",(0,o.kt)("inlineCode",{parentName:"p"},"ProviderListener")," provee de los siguientes par\xe1metros\npara escuchar su ciclo de vida.\n",(0,o.kt)("inlineCode",{parentName:"p"},"onInitState, onAfterFirstLayout, onDispose"),"."))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Si quiere escuchar multiples providers al mismo tiempo utilice el widget ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiProviderListener"),"."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"\nfinal conterProvider = SimpleProvider(\n  (_) => CounterController(),\n);\n\nfinal loginProvider = StateProvider<LoginController, LoginState>(\n  (_) => LoginController(),\n);\n\nclass MultiProviderPage extends StatelessWidget {\n  const MultiProviderPage({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return MultiProviderListener(\n      items: [\n        MultiProviderListenerItem<CounterController>(\n          provider: conterProvider,\n          onChange: (_, controller) {\n              /// ADD YOUR CODE HERE\n          },\n        ),\n        MultiProviderListenerItem<LoginController>(\n          provider: loginProvider,\n          onChange: (_, controller) {\n             /// ADD YOUR CODE HERE\n          },\n        ),\n      ],\n      child: YOUR_WIDGET,\n    );\n  }\n}\n\n")))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Los widgets ",(0,o.kt)("inlineCode",{parentName:"li"},"ProviderListener")," y ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiProviderListener")," solamente escuchan los cambios pero NO actualizan la vista.")))),(0,o.kt)("p",null,"Tambien puede escuchar los cambios en un provider mediante un ",(0,o.kt)("inlineCode",{parentName:"p"},"StreamSubscription")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{1,5-7,12}","{1,5-7,12}":!0},"  StreamSubscription? _subscription;\n  @override\n  void initState() {\n    super.initState();\n    _subscription = counterProvider.read.stream.listen((_) {\n      // YOUR CODE HERE\n    });\n  }\n\n  @override\n  void dispose() {\n    _subscription?.cancel();\n    super.dispose();\n  }\n")),(0,o.kt)("h3",{id:"actualizar-consumers-mediante-el-filtro-select"},"Actualizar Consumers mediante el filtro ",(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("em",{parentName:"strong"},".select"))),(0,o.kt)("p",null,"Si tiene multiples widget ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer")," y no quiere que todos se actualicen cuando hay un cambio en su SimpleNotifier puede usar el filtro ",(0,o.kt)("inlineCode",{parentName:"p"},".select"),"."),(0,o.kt)("p",null,"El siguiente c\xf3digo solo  actualiza el  ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer")," cuando el\nvalor de ",(0,o.kt)("inlineCode",{parentName:"p"},"counter")," es mayor o igual a 5."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{20}","{20}":!0},'class CounterController extends SimpleNotifier {\n  int _counter = 0;\n  int get counter => _counter;\n\n  void increment() {\n    _counter++;\n    notify();\n  }\n}\n\n.\n.\n.\n\nScaffold(\n  body: Center(\n    child: Consumer(\n        builder: (_, ref, __) {\n          final controller = ref.watch(\n            counterProvider.select(\n              (controller) => controller.counter > 5),\n            ),\n          );\n          return Text("${controller.counter}");\n        },\n    )\n  ),\n  floatingActionButton: FloatingActionButton(\n    onPressed: () {\n      // you can use the read method to access to your CounterController\n      counterProvider.read.increment();\n    },\n  ),\n)\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"El filtro ",(0,o.kt)("inlineCode",{parentName:"p"},".select")," tambien puede ser usado para escuchar cuando\nel valor de un dato ha cambiado en su Notifier."),(0,o.kt)("p",{parentName:"div"},"El siguiente codigo actualiza el ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer")," solo cuando el valor de la propiedad ",(0,o.kt)("inlineCode",{parentName:"p"},"counter"),"ha cambiado en nuestro CounterController."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'Consumer(\n  builder: (_, ref, __) {\n    final controller = ref.watch(\n        counterProvider.select((_) => _.counter,\n      ),\n    );\n    return Text("${controller.counter}");\n  },\n)\n')),(0,o.kt)("p",{parentName:"div"},"Por defecto ",(0,o.kt)("inlineCode",{parentName:"p"},"ref.watch")," retorna el Notifier vinculado a un provider.\nSi quiere acceder directamente al valor retornado por el filtro ",(0,o.kt)("inlineCode",{parentName:"p"},".select")," utilice ",(0,o.kt)("inlineCode",{parentName:"p"},"ref.select")," en lugar de ",(0,o.kt)("inlineCode",{parentName:"p"},"ref.watch")),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'Consumer(\n  builder: (_, ref, __) {\n    final counter = ref.select(\n        counterProvider.select((_) => _.counter,\n      ),\n    );\n    return Text("$counter");\n  },\n)\n')))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Los filtros ",(0,o.kt)("inlineCode",{parentName:"li"},".select , .when")," tambien pueden ser usados con los widgets ",(0,o.kt)("inlineCode",{parentName:"li"},"ProviderListener"),"\ny ",(0,o.kt)("inlineCode",{parentName:"li"},"MultiProviderListener"))),(0,o.kt)("p",{parentName:"div"},"Ejemplo:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"ProviderListener<CounterController>(\n  provider: counterProvider.select(\n    (_) => _.counter >= 5,\n  ),\n  onChange: (_, controller) {\n\n  },\n  builder: (_, controller) {\n    return YOUR_WIDGET;\n  },\n);\n")))),(0,o.kt)("h2",{id:"consumerwidget"},"ConsumerWidget"),(0,o.kt)("p",null,"Puede crear un widget que extienda de ",(0,o.kt)("inlineCode",{parentName:"p"},"ConsumerWidget")," y escuchar los cambios en un ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleNotifier")," o un ",(0,o.kt)("inlineCode",{parentName:"p"},"StateNotifier")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{7}","{7}":!0},'class CounterPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(),\n      body: Center(\n        child: CounterView(),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {\n          counterProvider.read.increment();\n        },\n      ),\n    );\n  }\n}\n\nclass CounterView extends ConsumerWidget {\n  @override\n  Widget build(BuildContext context, ref) {\n    final controller = ref.watch(counterProvider);\n    return Text("${controller.counter}");\n  }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"NOTE")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"El par\xe1metro ",(0,o.kt)("inlineCode",{parentName:"p"},"ref")," en un ",(0,o.kt)("inlineCode",{parentName:"p"},"Consumer")," o en un ",(0,o.kt)("inlineCode",{parentName:"p"},"ConsumerWidget")," puede ser usado para escuchar multiples providers."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'class CounterView extends ConsumerWidget {\n  @override\n  Widget build(BuildContext context, ref) {\n    final counterController = ref.watch(counterProvider);\n    final loginController = ref.watch(loginProvider);\n    return Text("${counterController.counter}");\n  }\n}\n')))))}c.isMDXComponent=!0}}]);